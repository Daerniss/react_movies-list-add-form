{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/Field/Field.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","Field","id","value","label","type","required","onChange","onValidate","useState","isValidated","setIsValidated","htmlFor","onBlur","classNames","NewMovie","state","handleChange","e","currentTarget","key","setState","handleSubmit","newMovie","props","addMovie","clearForm","preventDefault","handleValidate","trim","match","this","isValid","Object","entries","every","keyPair","noValidate","onSubmit","disabled","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdfb715a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt={`${title} logo`}\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable react/require-default-props */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  id: string;\n  value: string;\n  label: string;\n  type: string;\n  required?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onValidate?: (key: string, value: string) => boolean;\n}\n\nexport const Field: React.FC<Props> = ({\n  id,\n  value,\n  label,\n  type,\n  required = false,\n  onChange,\n  onValidate = null,\n}) => {\n  const [isValidated, setIsValidated] = useState(true);\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={id}>\n        {`${label}${required ? '*' : ''}`}\n        <div className=\"control\">\n          <input\n            id={id}\n            type={type}\n            className=\"input\"\n            value={value}\n            onChange={onChange}\n            onBlur={() => {\n              if (onValidate) {\n                setIsValidated(onValidate(id, value));\n              }\n            }}\n            required={required}\n          />\n        </div>\n        <p className={classNames(\n          'help is-danger',\n          {\n            'is-invisible': isValidated,\n          },\n        )}\n        >\n          This field is invalid\n        </p>\n      </label>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport { Field } from '../Field';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\ntype State = {\n  [key in keyof Movie]: string;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    const {\n      id: key,\n      value,\n    } = e.currentTarget;\n\n    this.setState(state => ({ ...state, [key]: value }));\n  };\n\n  handleSubmit: React.FormEventHandler = (e) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const newMovie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.addMovie(newMovie);\n    this.clearForm();\n    e.preventDefault();\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  handleValidate = (key: string, value: string): boolean => {\n    switch (key) {\n      case 'title':\n      case 'imdbId':\n        return !!value.trim();\n\n      case 'imgUrl':\n      case 'imdbUrl':\n        return value.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/) !== null;\n\n      default:\n        return true;\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const isValid = Object.entries(this.state)\n      .every(keyPair => this.handleValidate(...keyPair));\n\n    return (\n      <form noValidate onSubmit={this.handleSubmit} className=\"container box\">\n        <Field\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          label=\"Title\"\n          onChange={this.handleChange}\n          onValidate={this.handleValidate}\n          required\n        />\n        <Field\n          type=\"text\"\n          id=\"description\"\n          value={description}\n          label=\"Description\"\n          onChange={this.handleChange}\n        />\n        <Field\n          type=\"text\"\n          id=\"imgUrl\"\n          value={imgUrl}\n          label=\"Image Link\"\n          onChange={this.handleChange}\n          onValidate={this.handleValidate}\n          required\n        />\n        <Field\n          type=\"text\"\n          id=\"imdbUrl\"\n          value={imdbUrl}\n          label=\"IMDB Link\"\n          onChange={this.handleChange}\n          onValidate={this.handleValidate}\n          required\n        />\n        <Field\n          type=\"text\"\n          id=\"imdbId\"\n          value={imdbId}\n          label=\"IMDB id\"\n          onChange={this.handleChange}\n          onValidate={this.handleValidate}\n          required\n        />\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-link\"\n            disabled={!isValid}\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({ movies: [...state.movies, movie] }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}